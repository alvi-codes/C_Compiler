Terminals unused in grammar

    STRING_LITERAL
    SIZEOF
    PTR_OP
    TYPE_NAME
    TYPEDEF
    EXTERN
    STATIC
    AUTO
    REGISTER
    VOLATILE
    STRUCT
    UNION
    ENUM
    ELLIPSIS
    GOTO


State 37 conflicts: 27 shift/reduce
State 38 conflicts: 27 shift/reduce
State 44 conflicts: 27 shift/reduce
State 101 conflicts: 27 shift/reduce
State 102 conflicts: 27 shift/reduce
State 103 conflicts: 27 shift/reduce
State 104 conflicts: 27 shift/reduce
State 105 conflicts: 27 shift/reduce
State 106 conflicts: 27 shift/reduce
State 107 conflicts: 27 shift/reduce
State 108 conflicts: 27 shift/reduce
State 109 conflicts: 27 shift/reduce
State 110 conflicts: 27 shift/reduce
State 111 conflicts: 27 shift/reduce
State 112 conflicts: 27 shift/reduce
State 113 conflicts: 27 shift/reduce
State 114 conflicts: 27 shift/reduce
State 115 conflicts: 27 shift/reduce
State 116 conflicts: 27 shift/reduce
State 117 conflicts: 27 shift/reduce
State 118 conflicts: 27 shift/reduce
State 119 conflicts: 27 shift/reduce
State 120 conflicts: 27 shift/reduce
State 121 conflicts: 27 shift/reduce
State 122 conflicts: 27 shift/reduce
State 123 conflicts: 27 shift/reduce
State 124 conflicts: 27 shift/reduce
State 125 conflicts: 27 shift/reduce
State 126 conflicts: 2 shift/reduce
State 127 conflicts: 2 shift/reduce


Grammar

    0 $accept: ROOT $end

    1 ROOT: OUTPUT

    2 OUTPUT: HEADS

    3 HEADS: HEADS HEAD
    4      | HEAD

    5 HEAD: DATA_TYPES IDENTIFIER '(' ')' ';'
    6     | DATA_TYPES IDENTIFIER '(' PARAMETER ')' ';'
    7     | DATA_TYPES IDENTIFIER '(' ')' BLOCK
    8     | DATA_TYPES IDENTIFIER '(' PARAMETER ')' BLOCK

    9 PARAMETER: PARAMETER ',' DECLARATION
   10          | DECLARATION

   11 BLOCK: '{' BODY '}'
   12      | '{' '}'

   13 BODY: LINE BODY
   14     | LINE

   15 LINE: STATEMENT ';'
   16     | DECLARATION ';'
   17     | IF_ELSE_SWITCH
   18     | LOOP

   19 STATEMENT: RETURN EXPR
   20          | RETURN
   21          | CONTINUE
   22          | BREAK

   23 DECLARATION: IDENTIFIER '=' EXPR
   24            | DATA_TYPES IDENTIFIER
   25            | DATA_TYPES IDENTIFIER '=' EXPR
   26            | EXPR

   27 EXPR: TERM
   28     | EXPR '+' EXPR
   29     | EXPR '-' EXPR
   30     | EXPR '>' EXPR
   31     | EXPR '<' EXPR
   32     | EXPR NE_OP EXPR
   33     | EXPR EQ_OP EXPR
   34     | EXPR GE_OP EXPR
   35     | EXPR LE_OP EXPR
   36     | EXPR OR_OP EXPR
   37     | EXPR AND_OP EXPR
   38     | '!' EXPR
   39     | EXPR RIGHT_ASSIGN EXPR
   40     | EXPR LEFT_ASSIGN EXPR
   41     | EXPR ADD_ASSIGN EXPR
   42     | EXPR SUB_ASSIGN EXPR
   43     | EXPR MUL_ASSIGN EXPR
   44     | EXPR DIV_ASSIGN EXPR
   45     | EXPR MOD_ASSIGN EXPR
   46     | EXPR AND_ASSIGN EXPR
   47     | EXPR XOR_ASSIGN EXPR
   48     | EXPR OR_ASSIGN EXPR
   49     | EXPR '&' EXPR
   50     | EXPR '|' EXPR
   51     | EXPR '^' EXPR
   52     | EXPR RIGHT_OP EXPR
   53     | EXPR LEFT_OP EXPR
   54     | EXPR INC_OP
   55     | INC_OP EXPR
   56     | EXPR DEC_OP
   57     | DEC_OP EXPR

   58 TERM: UNARY
   59     | TERM '*' TERM
   60     | TERM '/' TERM

   61 UNARY: FACTOR
   62      | '-' FACTOR

   63 FACTOR: CONSTANT
   64       | '(' EXPR ')'
   65       | IDENTIFIER
   66       | IDENTIFIER '(' ')'
   67       | IDENTIFIER '(' ARGUMENTS ')'

   68 ARGUMENTS: ARGUMENTS ',' EXPR
   69          | EXPR

   70 IF_ELSE_SWITCH: IF '(' EXPR ')' BLOCK
   71               | IF '(' EXPR ')' BLOCK ELSE BLOCK
   72               | EXPR '?' BLOCK ':' BLOCK
   73               | SWITCH '(' EXPR ')' SWITCH_BLOCK

   74 CASES: CASE EXPR ':' BODY
   75      | DEFAULT ':' BODY

   76 SWITCH_BLOCK: '{' SWITCH_BODY '}'

   77 SWITCH_BODY: CASES SWITCH_BODY
   78            | CASES

   79 LOOP: FOR '(' DECLARATION ';' EXPR ';' DECLARATION ')' BLOCK
   80     | WHILE '(' EXPR ')' BLOCK
   81     | DO BLOCK WHILE '(' EXPR ')' ';'

   82 DATA_TYPES: INT
   83           | LONG
   84           | CHAR
   85           | SHORT
   86           | SIGNED
   87           | UNSIGNED
   88           | FLOAT
   89           | DOUBLE
   90           | VOID


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 38
    '&' (38) 49
    '(' (40) 5 6 7 8 64 66 67 70 71 73 79 80 81
    ')' (41) 5 6 7 8 64 66 67 70 71 73 79 80 81
    '*' (42) 59
    '+' (43) 28
    ',' (44) 9 68
    '-' (45) 29 62
    '/' (47) 60
    ':' (58) 72 74 75
    ';' (59) 5 6 15 16 79 81
    '<' (60) 31
    '=' (61) 23 25
    '>' (62) 30
    '?' (63) 72
    '^' (94) 51
    '{' (123) 11 12 76
    '|' (124) 50
    '}' (125) 11 12 76
    error (256)
    IDENTIFIER <string> (258) 5 6 7 8 23 24 25 65 66 67
    CONSTANT <number> (259) 63
    STRING_LITERAL <string> (260)
    SIZEOF (261)
    PTR_OP (262)
    INC_OP (263) 54 55
    DEC_OP (264) 56 57
    LEFT_OP (265) 53
    RIGHT_OP (266) 52
    LE_OP (267) 35
    GE_OP (268) 34
    EQ_OP (269) 33
    NE_OP (270) 32
    AND_OP (271) 37
    OR_OP (272) 36
    MUL_ASSIGN (273) 43
    DIV_ASSIGN (274) 44
    MOD_ASSIGN (275) 45
    ADD_ASSIGN (276) 41
    SUB_ASSIGN (277) 42
    LEFT_ASSIGN (278) 40
    RIGHT_ASSIGN (279) 39
    AND_ASSIGN (280) 46
    XOR_ASSIGN (281) 47
    OR_ASSIGN (282) 48
    TYPE_NAME (283)
    TYPEDEF (284)
    EXTERN (285)
    STATIC (286)
    AUTO (287)
    REGISTER (288)
    CHAR (289) 84
    SHORT (290) 85
    INT (291) 82
    LONG (292) 83
    SIGNED (293) 86
    UNSIGNED (294) 87
    FLOAT (295) 88
    DOUBLE (296) 89
    VOLATILE (297)
    VOID (298) 90
    STRUCT (299)
    UNION (300)
    ENUM (301)
    ELLIPSIS (302)
    CASE (303) 74
    DEFAULT (304) 75
    IF (305) 70 71
    ELSE (306) 71
    SWITCH (307) 73
    WHILE (308) 80 81
    DO (309) 81
    FOR (310) 79
    GOTO (311)
    CONTINUE (312) 21
    BREAK (313) 22
    RETURN (314) 19 20


Nonterminals, with rules where they appear

    $accept (79)
        on left: 0
    ROOT (80)
        on left: 1
        on right: 0
    OUTPUT <node> (81)
        on left: 2
        on right: 1
    HEADS <branch> (82)
        on left: 3 4
        on right: 2 3
    HEAD <node> (83)
        on left: 5 6 7 8
        on right: 3 4
    PARAMETER <branch> (84)
        on left: 9 10
        on right: 6 8 9
    BLOCK <node> (85)
        on left: 11 12
        on right: 7 8 70 71 72 79 80 81
    BODY <branch> (86)
        on left: 13 14
        on right: 11 13 74 75
    LINE <node> (87)
        on left: 15 16 17 18
        on right: 13 14
    STATEMENT <node> (88)
        on left: 19 20 21 22
        on right: 15
    DECLARATION <node> (89)
        on left: 23 24 25 26
        on right: 9 10 16 79
    EXPR <node> (90)
        on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57
        on right: 19 23 25 26 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 64 68 69 70 71 72 73 74 79 80 81
    TERM <node> (91)
        on left: 58 59 60
        on right: 27 59 60
    UNARY <node> (92)
        on left: 61 62
        on right: 58
    FACTOR <node> (93)
        on left: 63 64 65 66 67
        on right: 61 62
    ARGUMENTS <branch> (94)
        on left: 68 69
        on right: 67 68
    IF_ELSE_SWITCH <node> (95)
        on left: 70 71 72 73
        on right: 17
    CASES <node> (96)
        on left: 74 75
        on right: 77 78
    SWITCH_BLOCK <node> (97)
        on left: 76
        on right: 73
    SWITCH_BODY <branch> (98)
        on left: 77 78
        on right: 76 77
    LOOP <node> (99)
        on left: 79 80 81
        on right: 18
    DATA_TYPES <node> (100)
        on left: 82 83 84 85 86 87 88 89 90
        on right: 5 6 7 8 24 25


State 0

    0 $accept: . ROOT $end

    CHAR      shift, and go to state 1
    SHORT     shift, and go to state 2
    INT       shift, and go to state 3
    LONG      shift, and go to state 4
    SIGNED    shift, and go to state 5
    UNSIGNED  shift, and go to state 6
    FLOAT     shift, and go to state 7
    DOUBLE    shift, and go to state 8
    VOID      shift, and go to state 9

    ROOT        go to state 10
    OUTPUT      go to state 11
    HEADS       go to state 12
    HEAD        go to state 13
    DATA_TYPES  go to state 14


State 1

   84 DATA_TYPES: CHAR .

    $default  reduce using rule 84 (DATA_TYPES)


State 2

   85 DATA_TYPES: SHORT .

    $default  reduce using rule 85 (DATA_TYPES)


State 3

   82 DATA_TYPES: INT .

    $default  reduce using rule 82 (DATA_TYPES)


State 4

   83 DATA_TYPES: LONG .

    $default  reduce using rule 83 (DATA_TYPES)


State 5

   86 DATA_TYPES: SIGNED .

    $default  reduce using rule 86 (DATA_TYPES)


State 6

   87 DATA_TYPES: UNSIGNED .

    $default  reduce using rule 87 (DATA_TYPES)


State 7

   88 DATA_TYPES: FLOAT .

    $default  reduce using rule 88 (DATA_TYPES)


State 8

   89 DATA_TYPES: DOUBLE .

    $default  reduce using rule 89 (DATA_TYPES)


State 9

   90 DATA_TYPES: VOID .

    $default  reduce using rule 90 (DATA_TYPES)


State 10

    0 $accept: ROOT . $end

    $end  shift, and go to state 15


State 11

    1 ROOT: OUTPUT .

    $default  reduce using rule 1 (ROOT)


State 12

    2 OUTPUT: HEADS .
    3 HEADS: HEADS . HEAD

    CHAR      shift, and go to state 1
    SHORT     shift, and go to state 2
    INT       shift, and go to state 3
    LONG      shift, and go to state 4
    SIGNED    shift, and go to state 5
    UNSIGNED  shift, and go to state 6
    FLOAT     shift, and go to state 7
    DOUBLE    shift, and go to state 8
    VOID      shift, and go to state 9

    $default  reduce using rule 2 (OUTPUT)

    HEAD        go to state 16
    DATA_TYPES  go to state 14


State 13

    4 HEADS: HEAD .

    $default  reduce using rule 4 (HEADS)


State 14

    5 HEAD: DATA_TYPES . IDENTIFIER '(' ')' ';'
    6     | DATA_TYPES . IDENTIFIER '(' PARAMETER ')' ';'
    7     | DATA_TYPES . IDENTIFIER '(' ')' BLOCK
    8     | DATA_TYPES . IDENTIFIER '(' PARAMETER ')' BLOCK

    IDENTIFIER  shift, and go to state 17


State 15

    0 $accept: ROOT $end .

    $default  accept


State 16

    3 HEADS: HEADS HEAD .

    $default  reduce using rule 3 (HEADS)


State 17

    5 HEAD: DATA_TYPES IDENTIFIER . '(' ')' ';'
    6     | DATA_TYPES IDENTIFIER . '(' PARAMETER ')' ';'
    7     | DATA_TYPES IDENTIFIER . '(' ')' BLOCK
    8     | DATA_TYPES IDENTIFIER . '(' PARAMETER ')' BLOCK

    '('  shift, and go to state 18


State 18

    5 HEAD: DATA_TYPES IDENTIFIER '(' . ')' ';'
    6     | DATA_TYPES IDENTIFIER '(' . PARAMETER ')' ';'
    7     | DATA_TYPES IDENTIFIER '(' . ')' BLOCK
    8     | DATA_TYPES IDENTIFIER '(' . PARAMETER ')' BLOCK

    IDENTIFIER  shift, and go to state 19
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    VOID        shift, and go to state 9
    '('         shift, and go to state 23
    ')'         shift, and go to state 24
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    PARAMETER    go to state 27
    DECLARATION  go to state 28
    EXPR         go to state 29
    TERM         go to state 30
    UNARY        go to state 31
    FACTOR       go to state 32
    DATA_TYPES   go to state 33


State 19

   23 DECLARATION: IDENTIFIER . '=' EXPR
   65 FACTOR: IDENTIFIER .
   66       | IDENTIFIER . '(' ')'
   67       | IDENTIFIER . '(' ARGUMENTS ')'

    '('  shift, and go to state 34
    '='  shift, and go to state 35

    $default  reduce using rule 65 (FACTOR)


State 20

   63 FACTOR: CONSTANT .

    $default  reduce using rule 63 (FACTOR)


State 21

   55 EXPR: INC_OP . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 37
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 22

   57 EXPR: DEC_OP . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 38
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 23

   64 FACTOR: '(' . EXPR ')'

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 39
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 24

    5 HEAD: DATA_TYPES IDENTIFIER '(' ')' . ';'
    7     | DATA_TYPES IDENTIFIER '(' ')' . BLOCK

    ';'  shift, and go to state 40
    '{'  shift, and go to state 41

    BLOCK  go to state 42


State 25

   62 UNARY: '-' . FACTOR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    '('         shift, and go to state 23

    FACTOR  go to state 43


State 26

   38 EXPR: '!' . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 44
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 27

    6 HEAD: DATA_TYPES IDENTIFIER '(' PARAMETER . ')' ';'
    8     | DATA_TYPES IDENTIFIER '(' PARAMETER . ')' BLOCK
    9 PARAMETER: PARAMETER . ',' DECLARATION

    ')'  shift, and go to state 45
    ','  shift, and go to state 46


State 28

   10 PARAMETER: DECLARATION .

    $default  reduce using rule 10 (PARAMETER)


State 29

   26 DECLARATION: EXPR .
   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    $default  reduce using rule 26 (DECLARATION)


State 30

   27 EXPR: TERM .
   59 TERM: TERM . '*' TERM
   60     | TERM . '/' TERM

    '*'  shift, and go to state 74
    '/'  shift, and go to state 75

    $default  reduce using rule 27 (EXPR)


State 31

   58 TERM: UNARY .

    $default  reduce using rule 58 (TERM)


State 32

   61 UNARY: FACTOR .

    $default  reduce using rule 61 (UNARY)


State 33

   24 DECLARATION: DATA_TYPES . IDENTIFIER
   25            | DATA_TYPES . IDENTIFIER '=' EXPR

    IDENTIFIER  shift, and go to state 76


State 34

   66 FACTOR: IDENTIFIER '(' . ')'
   67       | IDENTIFIER '(' . ARGUMENTS ')'

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    ')'         shift, and go to state 77
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR       go to state 78
    TERM       go to state 30
    UNARY      go to state 31
    FACTOR     go to state 32
    ARGUMENTS  go to state 79


State 35

   23 DECLARATION: IDENTIFIER '=' . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 80
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 36

   65 FACTOR: IDENTIFIER .
   66       | IDENTIFIER . '(' ')'
   67       | IDENTIFIER . '(' ARGUMENTS ')'

    '('  shift, and go to state 34

    $default  reduce using rule 65 (FACTOR)


State 37

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   55     | INC_OP EXPR .
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 55 (EXPR)]
    DEC_OP        [reduce using rule 55 (EXPR)]
    LEFT_OP       [reduce using rule 55 (EXPR)]
    RIGHT_OP      [reduce using rule 55 (EXPR)]
    LE_OP         [reduce using rule 55 (EXPR)]
    GE_OP         [reduce using rule 55 (EXPR)]
    EQ_OP         [reduce using rule 55 (EXPR)]
    NE_OP         [reduce using rule 55 (EXPR)]
    AND_OP        [reduce using rule 55 (EXPR)]
    OR_OP         [reduce using rule 55 (EXPR)]
    MUL_ASSIGN    [reduce using rule 55 (EXPR)]
    DIV_ASSIGN    [reduce using rule 55 (EXPR)]
    MOD_ASSIGN    [reduce using rule 55 (EXPR)]
    ADD_ASSIGN    [reduce using rule 55 (EXPR)]
    SUB_ASSIGN    [reduce using rule 55 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 55 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 55 (EXPR)]
    AND_ASSIGN    [reduce using rule 55 (EXPR)]
    XOR_ASSIGN    [reduce using rule 55 (EXPR)]
    OR_ASSIGN     [reduce using rule 55 (EXPR)]
    '+'           [reduce using rule 55 (EXPR)]
    '-'           [reduce using rule 55 (EXPR)]
    '>'           [reduce using rule 55 (EXPR)]
    '<'           [reduce using rule 55 (EXPR)]
    '&'           [reduce using rule 55 (EXPR)]
    '|'           [reduce using rule 55 (EXPR)]
    '^'           [reduce using rule 55 (EXPR)]
    $default      reduce using rule 55 (EXPR)


State 38

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP
   57     | DEC_OP EXPR .

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 57 (EXPR)]
    DEC_OP        [reduce using rule 57 (EXPR)]
    LEFT_OP       [reduce using rule 57 (EXPR)]
    RIGHT_OP      [reduce using rule 57 (EXPR)]
    LE_OP         [reduce using rule 57 (EXPR)]
    GE_OP         [reduce using rule 57 (EXPR)]
    EQ_OP         [reduce using rule 57 (EXPR)]
    NE_OP         [reduce using rule 57 (EXPR)]
    AND_OP        [reduce using rule 57 (EXPR)]
    OR_OP         [reduce using rule 57 (EXPR)]
    MUL_ASSIGN    [reduce using rule 57 (EXPR)]
    DIV_ASSIGN    [reduce using rule 57 (EXPR)]
    MOD_ASSIGN    [reduce using rule 57 (EXPR)]
    ADD_ASSIGN    [reduce using rule 57 (EXPR)]
    SUB_ASSIGN    [reduce using rule 57 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 57 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 57 (EXPR)]
    AND_ASSIGN    [reduce using rule 57 (EXPR)]
    XOR_ASSIGN    [reduce using rule 57 (EXPR)]
    OR_ASSIGN     [reduce using rule 57 (EXPR)]
    '+'           [reduce using rule 57 (EXPR)]
    '-'           [reduce using rule 57 (EXPR)]
    '>'           [reduce using rule 57 (EXPR)]
    '<'           [reduce using rule 57 (EXPR)]
    '&'           [reduce using rule 57 (EXPR)]
    '|'           [reduce using rule 57 (EXPR)]
    '^'           [reduce using rule 57 (EXPR)]
    $default      reduce using rule 57 (EXPR)


State 39

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP
   64 FACTOR: '(' EXPR . ')'

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    ')'           shift, and go to state 81
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73


State 40

    5 HEAD: DATA_TYPES IDENTIFIER '(' ')' ';' .

    $default  reduce using rule 5 (HEAD)


State 41

   11 BLOCK: '{' . BODY '}'
   12      | '{' . '}'

    IDENTIFIER  shift, and go to state 19
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    VOID        shift, and go to state 9
    IF          shift, and go to state 82
    SWITCH      shift, and go to state 83
    WHILE       shift, and go to state 84
    DO          shift, and go to state 85
    FOR         shift, and go to state 86
    CONTINUE    shift, and go to state 87
    BREAK       shift, and go to state 88
    RETURN      shift, and go to state 89
    '('         shift, and go to state 23
    '}'         shift, and go to state 90
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    BODY            go to state 91
    LINE            go to state 92
    STATEMENT       go to state 93
    DECLARATION     go to state 94
    EXPR            go to state 95
    TERM            go to state 30
    UNARY           go to state 31
    FACTOR          go to state 32
    IF_ELSE_SWITCH  go to state 96
    LOOP            go to state 97
    DATA_TYPES      go to state 33


State 42

    7 HEAD: DATA_TYPES IDENTIFIER '(' ')' BLOCK .

    $default  reduce using rule 7 (HEAD)


State 43

   62 UNARY: '-' FACTOR .

    $default  reduce using rule 62 (UNARY)


State 44

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   38     | '!' EXPR .
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 38 (EXPR)]
    DEC_OP        [reduce using rule 38 (EXPR)]
    LEFT_OP       [reduce using rule 38 (EXPR)]
    RIGHT_OP      [reduce using rule 38 (EXPR)]
    LE_OP         [reduce using rule 38 (EXPR)]
    GE_OP         [reduce using rule 38 (EXPR)]
    EQ_OP         [reduce using rule 38 (EXPR)]
    NE_OP         [reduce using rule 38 (EXPR)]
    AND_OP        [reduce using rule 38 (EXPR)]
    OR_OP         [reduce using rule 38 (EXPR)]
    MUL_ASSIGN    [reduce using rule 38 (EXPR)]
    DIV_ASSIGN    [reduce using rule 38 (EXPR)]
    MOD_ASSIGN    [reduce using rule 38 (EXPR)]
    ADD_ASSIGN    [reduce using rule 38 (EXPR)]
    SUB_ASSIGN    [reduce using rule 38 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 38 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 38 (EXPR)]
    AND_ASSIGN    [reduce using rule 38 (EXPR)]
    XOR_ASSIGN    [reduce using rule 38 (EXPR)]
    OR_ASSIGN     [reduce using rule 38 (EXPR)]
    '+'           [reduce using rule 38 (EXPR)]
    '-'           [reduce using rule 38 (EXPR)]
    '>'           [reduce using rule 38 (EXPR)]
    '<'           [reduce using rule 38 (EXPR)]
    '&'           [reduce using rule 38 (EXPR)]
    '|'           [reduce using rule 38 (EXPR)]
    '^'           [reduce using rule 38 (EXPR)]
    $default      reduce using rule 38 (EXPR)


State 45

    6 HEAD: DATA_TYPES IDENTIFIER '(' PARAMETER ')' . ';'
    8     | DATA_TYPES IDENTIFIER '(' PARAMETER ')' . BLOCK

    ';'  shift, and go to state 98
    '{'  shift, and go to state 41

    BLOCK  go to state 99


State 46

    9 PARAMETER: PARAMETER ',' . DECLARATION

    IDENTIFIER  shift, and go to state 19
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    VOID        shift, and go to state 9
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    DECLARATION  go to state 100
    EXPR         go to state 29
    TERM         go to state 30
    UNARY        go to state 31
    FACTOR       go to state 32
    DATA_TYPES   go to state 33


State 47

   54 EXPR: EXPR INC_OP .

    $default  reduce using rule 54 (EXPR)


State 48

   56 EXPR: EXPR DEC_OP .

    $default  reduce using rule 56 (EXPR)


State 49

   53 EXPR: EXPR LEFT_OP . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 101
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 50

   52 EXPR: EXPR RIGHT_OP . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 102
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 51

   35 EXPR: EXPR LE_OP . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 103
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 52

   34 EXPR: EXPR GE_OP . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 104
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 53

   33 EXPR: EXPR EQ_OP . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 105
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 54

   32 EXPR: EXPR NE_OP . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 106
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 55

   37 EXPR: EXPR AND_OP . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 107
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 56

   36 EXPR: EXPR OR_OP . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 108
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 57

   43 EXPR: EXPR MUL_ASSIGN . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 109
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 58

   44 EXPR: EXPR DIV_ASSIGN . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 110
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 59

   45 EXPR: EXPR MOD_ASSIGN . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 111
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 60

   41 EXPR: EXPR ADD_ASSIGN . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 112
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 61

   42 EXPR: EXPR SUB_ASSIGN . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 113
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 62

   40 EXPR: EXPR LEFT_ASSIGN . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 114
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 63

   39 EXPR: EXPR RIGHT_ASSIGN . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 115
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 64

   46 EXPR: EXPR AND_ASSIGN . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 116
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 65

   47 EXPR: EXPR XOR_ASSIGN . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 117
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 66

   48 EXPR: EXPR OR_ASSIGN . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 118
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 67

   28 EXPR: EXPR '+' . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 119
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 68

   29 EXPR: EXPR '-' . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 120
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 69

   30 EXPR: EXPR '>' . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 121
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 70

   31 EXPR: EXPR '<' . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 122
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 71

   49 EXPR: EXPR '&' . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 123
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 72

   50 EXPR: EXPR '|' . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 124
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 73

   51 EXPR: EXPR '^' . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 125
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 74

   59 TERM: TERM '*' . TERM

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    '('         shift, and go to state 23
    '-'         shift, and go to state 25

    TERM    go to state 126
    UNARY   go to state 31
    FACTOR  go to state 32


State 75

   60 TERM: TERM '/' . TERM

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    '('         shift, and go to state 23
    '-'         shift, and go to state 25

    TERM    go to state 127
    UNARY   go to state 31
    FACTOR  go to state 32


State 76

   24 DECLARATION: DATA_TYPES IDENTIFIER .
   25            | DATA_TYPES IDENTIFIER . '=' EXPR

    '='  shift, and go to state 128

    $default  reduce using rule 24 (DECLARATION)


State 77

   66 FACTOR: IDENTIFIER '(' ')' .

    $default  reduce using rule 66 (FACTOR)


State 78

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP
   69 ARGUMENTS: EXPR .

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    $default  reduce using rule 69 (ARGUMENTS)


State 79

   67 FACTOR: IDENTIFIER '(' ARGUMENTS . ')'
   68 ARGUMENTS: ARGUMENTS . ',' EXPR

    ')'  shift, and go to state 129
    ','  shift, and go to state 130


State 80

   23 DECLARATION: IDENTIFIER '=' EXPR .
   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    $default  reduce using rule 23 (DECLARATION)


State 81

   64 FACTOR: '(' EXPR ')' .

    $default  reduce using rule 64 (FACTOR)


State 82

   70 IF_ELSE_SWITCH: IF . '(' EXPR ')' BLOCK
   71               | IF . '(' EXPR ')' BLOCK ELSE BLOCK

    '('  shift, and go to state 131


State 83

   73 IF_ELSE_SWITCH: SWITCH . '(' EXPR ')' SWITCH_BLOCK

    '('  shift, and go to state 132


State 84

   80 LOOP: WHILE . '(' EXPR ')' BLOCK

    '('  shift, and go to state 133


State 85

   81 LOOP: DO . BLOCK WHILE '(' EXPR ')' ';'

    '{'  shift, and go to state 41

    BLOCK  go to state 134


State 86

   79 LOOP: FOR . '(' DECLARATION ';' EXPR ';' DECLARATION ')' BLOCK

    '('  shift, and go to state 135


State 87

   21 STATEMENT: CONTINUE .

    $default  reduce using rule 21 (STATEMENT)


State 88

   22 STATEMENT: BREAK .

    $default  reduce using rule 22 (STATEMENT)


State 89

   19 STATEMENT: RETURN . EXPR
   20          | RETURN .

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    $default  reduce using rule 20 (STATEMENT)

    EXPR    go to state 136
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 90

   12 BLOCK: '{' '}' .

    $default  reduce using rule 12 (BLOCK)


State 91

   11 BLOCK: '{' BODY . '}'

    '}'  shift, and go to state 137


State 92

   13 BODY: LINE . BODY
   14     | LINE .

    IDENTIFIER  shift, and go to state 19
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    VOID        shift, and go to state 9
    IF          shift, and go to state 82
    SWITCH      shift, and go to state 83
    WHILE       shift, and go to state 84
    DO          shift, and go to state 85
    FOR         shift, and go to state 86
    CONTINUE    shift, and go to state 87
    BREAK       shift, and go to state 88
    RETURN      shift, and go to state 89
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    $default  reduce using rule 14 (BODY)

    BODY            go to state 138
    LINE            go to state 92
    STATEMENT       go to state 93
    DECLARATION     go to state 94
    EXPR            go to state 95
    TERM            go to state 30
    UNARY           go to state 31
    FACTOR          go to state 32
    IF_ELSE_SWITCH  go to state 96
    LOOP            go to state 97
    DATA_TYPES      go to state 33


State 93

   15 LINE: STATEMENT . ';'

    ';'  shift, and go to state 139


State 94

   16 LINE: DECLARATION . ';'

    ';'  shift, and go to state 140


State 95

   26 DECLARATION: EXPR .
   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP
   72 IF_ELSE_SWITCH: EXPR . '?' BLOCK ':' BLOCK

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73
    '?'           shift, and go to state 141

    $default  reduce using rule 26 (DECLARATION)


State 96

   17 LINE: IF_ELSE_SWITCH .

    $default  reduce using rule 17 (LINE)


State 97

   18 LINE: LOOP .

    $default  reduce using rule 18 (LINE)


State 98

    6 HEAD: DATA_TYPES IDENTIFIER '(' PARAMETER ')' ';' .

    $default  reduce using rule 6 (HEAD)


State 99

    8 HEAD: DATA_TYPES IDENTIFIER '(' PARAMETER ')' BLOCK .

    $default  reduce using rule 8 (HEAD)


State 100

    9 PARAMETER: PARAMETER ',' DECLARATION .

    $default  reduce using rule 9 (PARAMETER)


State 101

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   53     | EXPR LEFT_OP EXPR .
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 53 (EXPR)]
    DEC_OP        [reduce using rule 53 (EXPR)]
    LEFT_OP       [reduce using rule 53 (EXPR)]
    RIGHT_OP      [reduce using rule 53 (EXPR)]
    LE_OP         [reduce using rule 53 (EXPR)]
    GE_OP         [reduce using rule 53 (EXPR)]
    EQ_OP         [reduce using rule 53 (EXPR)]
    NE_OP         [reduce using rule 53 (EXPR)]
    AND_OP        [reduce using rule 53 (EXPR)]
    OR_OP         [reduce using rule 53 (EXPR)]
    MUL_ASSIGN    [reduce using rule 53 (EXPR)]
    DIV_ASSIGN    [reduce using rule 53 (EXPR)]
    MOD_ASSIGN    [reduce using rule 53 (EXPR)]
    ADD_ASSIGN    [reduce using rule 53 (EXPR)]
    SUB_ASSIGN    [reduce using rule 53 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 53 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 53 (EXPR)]
    AND_ASSIGN    [reduce using rule 53 (EXPR)]
    XOR_ASSIGN    [reduce using rule 53 (EXPR)]
    OR_ASSIGN     [reduce using rule 53 (EXPR)]
    '+'           [reduce using rule 53 (EXPR)]
    '-'           [reduce using rule 53 (EXPR)]
    '>'           [reduce using rule 53 (EXPR)]
    '<'           [reduce using rule 53 (EXPR)]
    '&'           [reduce using rule 53 (EXPR)]
    '|'           [reduce using rule 53 (EXPR)]
    '^'           [reduce using rule 53 (EXPR)]
    $default      reduce using rule 53 (EXPR)


State 102

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   52     | EXPR RIGHT_OP EXPR .
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 52 (EXPR)]
    DEC_OP        [reduce using rule 52 (EXPR)]
    LEFT_OP       [reduce using rule 52 (EXPR)]
    RIGHT_OP      [reduce using rule 52 (EXPR)]
    LE_OP         [reduce using rule 52 (EXPR)]
    GE_OP         [reduce using rule 52 (EXPR)]
    EQ_OP         [reduce using rule 52 (EXPR)]
    NE_OP         [reduce using rule 52 (EXPR)]
    AND_OP        [reduce using rule 52 (EXPR)]
    OR_OP         [reduce using rule 52 (EXPR)]
    MUL_ASSIGN    [reduce using rule 52 (EXPR)]
    DIV_ASSIGN    [reduce using rule 52 (EXPR)]
    MOD_ASSIGN    [reduce using rule 52 (EXPR)]
    ADD_ASSIGN    [reduce using rule 52 (EXPR)]
    SUB_ASSIGN    [reduce using rule 52 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 52 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 52 (EXPR)]
    AND_ASSIGN    [reduce using rule 52 (EXPR)]
    XOR_ASSIGN    [reduce using rule 52 (EXPR)]
    OR_ASSIGN     [reduce using rule 52 (EXPR)]
    '+'           [reduce using rule 52 (EXPR)]
    '-'           [reduce using rule 52 (EXPR)]
    '>'           [reduce using rule 52 (EXPR)]
    '<'           [reduce using rule 52 (EXPR)]
    '&'           [reduce using rule 52 (EXPR)]
    '|'           [reduce using rule 52 (EXPR)]
    '^'           [reduce using rule 52 (EXPR)]
    $default      reduce using rule 52 (EXPR)


State 103

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   35     | EXPR LE_OP EXPR .
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 35 (EXPR)]
    DEC_OP        [reduce using rule 35 (EXPR)]
    LEFT_OP       [reduce using rule 35 (EXPR)]
    RIGHT_OP      [reduce using rule 35 (EXPR)]
    LE_OP         [reduce using rule 35 (EXPR)]
    GE_OP         [reduce using rule 35 (EXPR)]
    EQ_OP         [reduce using rule 35 (EXPR)]
    NE_OP         [reduce using rule 35 (EXPR)]
    AND_OP        [reduce using rule 35 (EXPR)]
    OR_OP         [reduce using rule 35 (EXPR)]
    MUL_ASSIGN    [reduce using rule 35 (EXPR)]
    DIV_ASSIGN    [reduce using rule 35 (EXPR)]
    MOD_ASSIGN    [reduce using rule 35 (EXPR)]
    ADD_ASSIGN    [reduce using rule 35 (EXPR)]
    SUB_ASSIGN    [reduce using rule 35 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 35 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 35 (EXPR)]
    AND_ASSIGN    [reduce using rule 35 (EXPR)]
    XOR_ASSIGN    [reduce using rule 35 (EXPR)]
    OR_ASSIGN     [reduce using rule 35 (EXPR)]
    '+'           [reduce using rule 35 (EXPR)]
    '-'           [reduce using rule 35 (EXPR)]
    '>'           [reduce using rule 35 (EXPR)]
    '<'           [reduce using rule 35 (EXPR)]
    '&'           [reduce using rule 35 (EXPR)]
    '|'           [reduce using rule 35 (EXPR)]
    '^'           [reduce using rule 35 (EXPR)]
    $default      reduce using rule 35 (EXPR)


State 104

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   34     | EXPR GE_OP EXPR .
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 34 (EXPR)]
    DEC_OP        [reduce using rule 34 (EXPR)]
    LEFT_OP       [reduce using rule 34 (EXPR)]
    RIGHT_OP      [reduce using rule 34 (EXPR)]
    LE_OP         [reduce using rule 34 (EXPR)]
    GE_OP         [reduce using rule 34 (EXPR)]
    EQ_OP         [reduce using rule 34 (EXPR)]
    NE_OP         [reduce using rule 34 (EXPR)]
    AND_OP        [reduce using rule 34 (EXPR)]
    OR_OP         [reduce using rule 34 (EXPR)]
    MUL_ASSIGN    [reduce using rule 34 (EXPR)]
    DIV_ASSIGN    [reduce using rule 34 (EXPR)]
    MOD_ASSIGN    [reduce using rule 34 (EXPR)]
    ADD_ASSIGN    [reduce using rule 34 (EXPR)]
    SUB_ASSIGN    [reduce using rule 34 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 34 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 34 (EXPR)]
    AND_ASSIGN    [reduce using rule 34 (EXPR)]
    XOR_ASSIGN    [reduce using rule 34 (EXPR)]
    OR_ASSIGN     [reduce using rule 34 (EXPR)]
    '+'           [reduce using rule 34 (EXPR)]
    '-'           [reduce using rule 34 (EXPR)]
    '>'           [reduce using rule 34 (EXPR)]
    '<'           [reduce using rule 34 (EXPR)]
    '&'           [reduce using rule 34 (EXPR)]
    '|'           [reduce using rule 34 (EXPR)]
    '^'           [reduce using rule 34 (EXPR)]
    $default      reduce using rule 34 (EXPR)


State 105

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   33     | EXPR EQ_OP EXPR .
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 33 (EXPR)]
    DEC_OP        [reduce using rule 33 (EXPR)]
    LEFT_OP       [reduce using rule 33 (EXPR)]
    RIGHT_OP      [reduce using rule 33 (EXPR)]
    LE_OP         [reduce using rule 33 (EXPR)]
    GE_OP         [reduce using rule 33 (EXPR)]
    EQ_OP         [reduce using rule 33 (EXPR)]
    NE_OP         [reduce using rule 33 (EXPR)]
    AND_OP        [reduce using rule 33 (EXPR)]
    OR_OP         [reduce using rule 33 (EXPR)]
    MUL_ASSIGN    [reduce using rule 33 (EXPR)]
    DIV_ASSIGN    [reduce using rule 33 (EXPR)]
    MOD_ASSIGN    [reduce using rule 33 (EXPR)]
    ADD_ASSIGN    [reduce using rule 33 (EXPR)]
    SUB_ASSIGN    [reduce using rule 33 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 33 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 33 (EXPR)]
    AND_ASSIGN    [reduce using rule 33 (EXPR)]
    XOR_ASSIGN    [reduce using rule 33 (EXPR)]
    OR_ASSIGN     [reduce using rule 33 (EXPR)]
    '+'           [reduce using rule 33 (EXPR)]
    '-'           [reduce using rule 33 (EXPR)]
    '>'           [reduce using rule 33 (EXPR)]
    '<'           [reduce using rule 33 (EXPR)]
    '&'           [reduce using rule 33 (EXPR)]
    '|'           [reduce using rule 33 (EXPR)]
    '^'           [reduce using rule 33 (EXPR)]
    $default      reduce using rule 33 (EXPR)


State 106

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   32     | EXPR NE_OP EXPR .
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 32 (EXPR)]
    DEC_OP        [reduce using rule 32 (EXPR)]
    LEFT_OP       [reduce using rule 32 (EXPR)]
    RIGHT_OP      [reduce using rule 32 (EXPR)]
    LE_OP         [reduce using rule 32 (EXPR)]
    GE_OP         [reduce using rule 32 (EXPR)]
    EQ_OP         [reduce using rule 32 (EXPR)]
    NE_OP         [reduce using rule 32 (EXPR)]
    AND_OP        [reduce using rule 32 (EXPR)]
    OR_OP         [reduce using rule 32 (EXPR)]
    MUL_ASSIGN    [reduce using rule 32 (EXPR)]
    DIV_ASSIGN    [reduce using rule 32 (EXPR)]
    MOD_ASSIGN    [reduce using rule 32 (EXPR)]
    ADD_ASSIGN    [reduce using rule 32 (EXPR)]
    SUB_ASSIGN    [reduce using rule 32 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 32 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 32 (EXPR)]
    AND_ASSIGN    [reduce using rule 32 (EXPR)]
    XOR_ASSIGN    [reduce using rule 32 (EXPR)]
    OR_ASSIGN     [reduce using rule 32 (EXPR)]
    '+'           [reduce using rule 32 (EXPR)]
    '-'           [reduce using rule 32 (EXPR)]
    '>'           [reduce using rule 32 (EXPR)]
    '<'           [reduce using rule 32 (EXPR)]
    '&'           [reduce using rule 32 (EXPR)]
    '|'           [reduce using rule 32 (EXPR)]
    '^'           [reduce using rule 32 (EXPR)]
    $default      reduce using rule 32 (EXPR)


State 107

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   37     | EXPR AND_OP EXPR .
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 37 (EXPR)]
    DEC_OP        [reduce using rule 37 (EXPR)]
    LEFT_OP       [reduce using rule 37 (EXPR)]
    RIGHT_OP      [reduce using rule 37 (EXPR)]
    LE_OP         [reduce using rule 37 (EXPR)]
    GE_OP         [reduce using rule 37 (EXPR)]
    EQ_OP         [reduce using rule 37 (EXPR)]
    NE_OP         [reduce using rule 37 (EXPR)]
    AND_OP        [reduce using rule 37 (EXPR)]
    OR_OP         [reduce using rule 37 (EXPR)]
    MUL_ASSIGN    [reduce using rule 37 (EXPR)]
    DIV_ASSIGN    [reduce using rule 37 (EXPR)]
    MOD_ASSIGN    [reduce using rule 37 (EXPR)]
    ADD_ASSIGN    [reduce using rule 37 (EXPR)]
    SUB_ASSIGN    [reduce using rule 37 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 37 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 37 (EXPR)]
    AND_ASSIGN    [reduce using rule 37 (EXPR)]
    XOR_ASSIGN    [reduce using rule 37 (EXPR)]
    OR_ASSIGN     [reduce using rule 37 (EXPR)]
    '+'           [reduce using rule 37 (EXPR)]
    '-'           [reduce using rule 37 (EXPR)]
    '>'           [reduce using rule 37 (EXPR)]
    '<'           [reduce using rule 37 (EXPR)]
    '&'           [reduce using rule 37 (EXPR)]
    '|'           [reduce using rule 37 (EXPR)]
    '^'           [reduce using rule 37 (EXPR)]
    $default      reduce using rule 37 (EXPR)


State 108

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   36     | EXPR OR_OP EXPR .
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 36 (EXPR)]
    DEC_OP        [reduce using rule 36 (EXPR)]
    LEFT_OP       [reduce using rule 36 (EXPR)]
    RIGHT_OP      [reduce using rule 36 (EXPR)]
    LE_OP         [reduce using rule 36 (EXPR)]
    GE_OP         [reduce using rule 36 (EXPR)]
    EQ_OP         [reduce using rule 36 (EXPR)]
    NE_OP         [reduce using rule 36 (EXPR)]
    AND_OP        [reduce using rule 36 (EXPR)]
    OR_OP         [reduce using rule 36 (EXPR)]
    MUL_ASSIGN    [reduce using rule 36 (EXPR)]
    DIV_ASSIGN    [reduce using rule 36 (EXPR)]
    MOD_ASSIGN    [reduce using rule 36 (EXPR)]
    ADD_ASSIGN    [reduce using rule 36 (EXPR)]
    SUB_ASSIGN    [reduce using rule 36 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 36 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 36 (EXPR)]
    AND_ASSIGN    [reduce using rule 36 (EXPR)]
    XOR_ASSIGN    [reduce using rule 36 (EXPR)]
    OR_ASSIGN     [reduce using rule 36 (EXPR)]
    '+'           [reduce using rule 36 (EXPR)]
    '-'           [reduce using rule 36 (EXPR)]
    '>'           [reduce using rule 36 (EXPR)]
    '<'           [reduce using rule 36 (EXPR)]
    '&'           [reduce using rule 36 (EXPR)]
    '|'           [reduce using rule 36 (EXPR)]
    '^'           [reduce using rule 36 (EXPR)]
    $default      reduce using rule 36 (EXPR)


State 109

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   43     | EXPR MUL_ASSIGN EXPR .
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 43 (EXPR)]
    DEC_OP        [reduce using rule 43 (EXPR)]
    LEFT_OP       [reduce using rule 43 (EXPR)]
    RIGHT_OP      [reduce using rule 43 (EXPR)]
    LE_OP         [reduce using rule 43 (EXPR)]
    GE_OP         [reduce using rule 43 (EXPR)]
    EQ_OP         [reduce using rule 43 (EXPR)]
    NE_OP         [reduce using rule 43 (EXPR)]
    AND_OP        [reduce using rule 43 (EXPR)]
    OR_OP         [reduce using rule 43 (EXPR)]
    MUL_ASSIGN    [reduce using rule 43 (EXPR)]
    DIV_ASSIGN    [reduce using rule 43 (EXPR)]
    MOD_ASSIGN    [reduce using rule 43 (EXPR)]
    ADD_ASSIGN    [reduce using rule 43 (EXPR)]
    SUB_ASSIGN    [reduce using rule 43 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 43 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 43 (EXPR)]
    AND_ASSIGN    [reduce using rule 43 (EXPR)]
    XOR_ASSIGN    [reduce using rule 43 (EXPR)]
    OR_ASSIGN     [reduce using rule 43 (EXPR)]
    '+'           [reduce using rule 43 (EXPR)]
    '-'           [reduce using rule 43 (EXPR)]
    '>'           [reduce using rule 43 (EXPR)]
    '<'           [reduce using rule 43 (EXPR)]
    '&'           [reduce using rule 43 (EXPR)]
    '|'           [reduce using rule 43 (EXPR)]
    '^'           [reduce using rule 43 (EXPR)]
    $default      reduce using rule 43 (EXPR)


State 110

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   44     | EXPR DIV_ASSIGN EXPR .
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 44 (EXPR)]
    DEC_OP        [reduce using rule 44 (EXPR)]
    LEFT_OP       [reduce using rule 44 (EXPR)]
    RIGHT_OP      [reduce using rule 44 (EXPR)]
    LE_OP         [reduce using rule 44 (EXPR)]
    GE_OP         [reduce using rule 44 (EXPR)]
    EQ_OP         [reduce using rule 44 (EXPR)]
    NE_OP         [reduce using rule 44 (EXPR)]
    AND_OP        [reduce using rule 44 (EXPR)]
    OR_OP         [reduce using rule 44 (EXPR)]
    MUL_ASSIGN    [reduce using rule 44 (EXPR)]
    DIV_ASSIGN    [reduce using rule 44 (EXPR)]
    MOD_ASSIGN    [reduce using rule 44 (EXPR)]
    ADD_ASSIGN    [reduce using rule 44 (EXPR)]
    SUB_ASSIGN    [reduce using rule 44 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 44 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 44 (EXPR)]
    AND_ASSIGN    [reduce using rule 44 (EXPR)]
    XOR_ASSIGN    [reduce using rule 44 (EXPR)]
    OR_ASSIGN     [reduce using rule 44 (EXPR)]
    '+'           [reduce using rule 44 (EXPR)]
    '-'           [reduce using rule 44 (EXPR)]
    '>'           [reduce using rule 44 (EXPR)]
    '<'           [reduce using rule 44 (EXPR)]
    '&'           [reduce using rule 44 (EXPR)]
    '|'           [reduce using rule 44 (EXPR)]
    '^'           [reduce using rule 44 (EXPR)]
    $default      reduce using rule 44 (EXPR)


State 111

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   45     | EXPR MOD_ASSIGN EXPR .
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 45 (EXPR)]
    DEC_OP        [reduce using rule 45 (EXPR)]
    LEFT_OP       [reduce using rule 45 (EXPR)]
    RIGHT_OP      [reduce using rule 45 (EXPR)]
    LE_OP         [reduce using rule 45 (EXPR)]
    GE_OP         [reduce using rule 45 (EXPR)]
    EQ_OP         [reduce using rule 45 (EXPR)]
    NE_OP         [reduce using rule 45 (EXPR)]
    AND_OP        [reduce using rule 45 (EXPR)]
    OR_OP         [reduce using rule 45 (EXPR)]
    MUL_ASSIGN    [reduce using rule 45 (EXPR)]
    DIV_ASSIGN    [reduce using rule 45 (EXPR)]
    MOD_ASSIGN    [reduce using rule 45 (EXPR)]
    ADD_ASSIGN    [reduce using rule 45 (EXPR)]
    SUB_ASSIGN    [reduce using rule 45 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 45 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 45 (EXPR)]
    AND_ASSIGN    [reduce using rule 45 (EXPR)]
    XOR_ASSIGN    [reduce using rule 45 (EXPR)]
    OR_ASSIGN     [reduce using rule 45 (EXPR)]
    '+'           [reduce using rule 45 (EXPR)]
    '-'           [reduce using rule 45 (EXPR)]
    '>'           [reduce using rule 45 (EXPR)]
    '<'           [reduce using rule 45 (EXPR)]
    '&'           [reduce using rule 45 (EXPR)]
    '|'           [reduce using rule 45 (EXPR)]
    '^'           [reduce using rule 45 (EXPR)]
    $default      reduce using rule 45 (EXPR)


State 112

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   41     | EXPR ADD_ASSIGN EXPR .
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 41 (EXPR)]
    DEC_OP        [reduce using rule 41 (EXPR)]
    LEFT_OP       [reduce using rule 41 (EXPR)]
    RIGHT_OP      [reduce using rule 41 (EXPR)]
    LE_OP         [reduce using rule 41 (EXPR)]
    GE_OP         [reduce using rule 41 (EXPR)]
    EQ_OP         [reduce using rule 41 (EXPR)]
    NE_OP         [reduce using rule 41 (EXPR)]
    AND_OP        [reduce using rule 41 (EXPR)]
    OR_OP         [reduce using rule 41 (EXPR)]
    MUL_ASSIGN    [reduce using rule 41 (EXPR)]
    DIV_ASSIGN    [reduce using rule 41 (EXPR)]
    MOD_ASSIGN    [reduce using rule 41 (EXPR)]
    ADD_ASSIGN    [reduce using rule 41 (EXPR)]
    SUB_ASSIGN    [reduce using rule 41 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 41 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 41 (EXPR)]
    AND_ASSIGN    [reduce using rule 41 (EXPR)]
    XOR_ASSIGN    [reduce using rule 41 (EXPR)]
    OR_ASSIGN     [reduce using rule 41 (EXPR)]
    '+'           [reduce using rule 41 (EXPR)]
    '-'           [reduce using rule 41 (EXPR)]
    '>'           [reduce using rule 41 (EXPR)]
    '<'           [reduce using rule 41 (EXPR)]
    '&'           [reduce using rule 41 (EXPR)]
    '|'           [reduce using rule 41 (EXPR)]
    '^'           [reduce using rule 41 (EXPR)]
    $default      reduce using rule 41 (EXPR)


State 113

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   42     | EXPR SUB_ASSIGN EXPR .
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 42 (EXPR)]
    DEC_OP        [reduce using rule 42 (EXPR)]
    LEFT_OP       [reduce using rule 42 (EXPR)]
    RIGHT_OP      [reduce using rule 42 (EXPR)]
    LE_OP         [reduce using rule 42 (EXPR)]
    GE_OP         [reduce using rule 42 (EXPR)]
    EQ_OP         [reduce using rule 42 (EXPR)]
    NE_OP         [reduce using rule 42 (EXPR)]
    AND_OP        [reduce using rule 42 (EXPR)]
    OR_OP         [reduce using rule 42 (EXPR)]
    MUL_ASSIGN    [reduce using rule 42 (EXPR)]
    DIV_ASSIGN    [reduce using rule 42 (EXPR)]
    MOD_ASSIGN    [reduce using rule 42 (EXPR)]
    ADD_ASSIGN    [reduce using rule 42 (EXPR)]
    SUB_ASSIGN    [reduce using rule 42 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 42 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 42 (EXPR)]
    AND_ASSIGN    [reduce using rule 42 (EXPR)]
    XOR_ASSIGN    [reduce using rule 42 (EXPR)]
    OR_ASSIGN     [reduce using rule 42 (EXPR)]
    '+'           [reduce using rule 42 (EXPR)]
    '-'           [reduce using rule 42 (EXPR)]
    '>'           [reduce using rule 42 (EXPR)]
    '<'           [reduce using rule 42 (EXPR)]
    '&'           [reduce using rule 42 (EXPR)]
    '|'           [reduce using rule 42 (EXPR)]
    '^'           [reduce using rule 42 (EXPR)]
    $default      reduce using rule 42 (EXPR)


State 114

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   40     | EXPR LEFT_ASSIGN EXPR .
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 40 (EXPR)]
    DEC_OP        [reduce using rule 40 (EXPR)]
    LEFT_OP       [reduce using rule 40 (EXPR)]
    RIGHT_OP      [reduce using rule 40 (EXPR)]
    LE_OP         [reduce using rule 40 (EXPR)]
    GE_OP         [reduce using rule 40 (EXPR)]
    EQ_OP         [reduce using rule 40 (EXPR)]
    NE_OP         [reduce using rule 40 (EXPR)]
    AND_OP        [reduce using rule 40 (EXPR)]
    OR_OP         [reduce using rule 40 (EXPR)]
    MUL_ASSIGN    [reduce using rule 40 (EXPR)]
    DIV_ASSIGN    [reduce using rule 40 (EXPR)]
    MOD_ASSIGN    [reduce using rule 40 (EXPR)]
    ADD_ASSIGN    [reduce using rule 40 (EXPR)]
    SUB_ASSIGN    [reduce using rule 40 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 40 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 40 (EXPR)]
    AND_ASSIGN    [reduce using rule 40 (EXPR)]
    XOR_ASSIGN    [reduce using rule 40 (EXPR)]
    OR_ASSIGN     [reduce using rule 40 (EXPR)]
    '+'           [reduce using rule 40 (EXPR)]
    '-'           [reduce using rule 40 (EXPR)]
    '>'           [reduce using rule 40 (EXPR)]
    '<'           [reduce using rule 40 (EXPR)]
    '&'           [reduce using rule 40 (EXPR)]
    '|'           [reduce using rule 40 (EXPR)]
    '^'           [reduce using rule 40 (EXPR)]
    $default      reduce using rule 40 (EXPR)


State 115

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   39     | EXPR RIGHT_ASSIGN EXPR .
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 39 (EXPR)]
    DEC_OP        [reduce using rule 39 (EXPR)]
    LEFT_OP       [reduce using rule 39 (EXPR)]
    RIGHT_OP      [reduce using rule 39 (EXPR)]
    LE_OP         [reduce using rule 39 (EXPR)]
    GE_OP         [reduce using rule 39 (EXPR)]
    EQ_OP         [reduce using rule 39 (EXPR)]
    NE_OP         [reduce using rule 39 (EXPR)]
    AND_OP        [reduce using rule 39 (EXPR)]
    OR_OP         [reduce using rule 39 (EXPR)]
    MUL_ASSIGN    [reduce using rule 39 (EXPR)]
    DIV_ASSIGN    [reduce using rule 39 (EXPR)]
    MOD_ASSIGN    [reduce using rule 39 (EXPR)]
    ADD_ASSIGN    [reduce using rule 39 (EXPR)]
    SUB_ASSIGN    [reduce using rule 39 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 39 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 39 (EXPR)]
    AND_ASSIGN    [reduce using rule 39 (EXPR)]
    XOR_ASSIGN    [reduce using rule 39 (EXPR)]
    OR_ASSIGN     [reduce using rule 39 (EXPR)]
    '+'           [reduce using rule 39 (EXPR)]
    '-'           [reduce using rule 39 (EXPR)]
    '>'           [reduce using rule 39 (EXPR)]
    '<'           [reduce using rule 39 (EXPR)]
    '&'           [reduce using rule 39 (EXPR)]
    '|'           [reduce using rule 39 (EXPR)]
    '^'           [reduce using rule 39 (EXPR)]
    $default      reduce using rule 39 (EXPR)


State 116

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   46     | EXPR AND_ASSIGN EXPR .
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 46 (EXPR)]
    DEC_OP        [reduce using rule 46 (EXPR)]
    LEFT_OP       [reduce using rule 46 (EXPR)]
    RIGHT_OP      [reduce using rule 46 (EXPR)]
    LE_OP         [reduce using rule 46 (EXPR)]
    GE_OP         [reduce using rule 46 (EXPR)]
    EQ_OP         [reduce using rule 46 (EXPR)]
    NE_OP         [reduce using rule 46 (EXPR)]
    AND_OP        [reduce using rule 46 (EXPR)]
    OR_OP         [reduce using rule 46 (EXPR)]
    MUL_ASSIGN    [reduce using rule 46 (EXPR)]
    DIV_ASSIGN    [reduce using rule 46 (EXPR)]
    MOD_ASSIGN    [reduce using rule 46 (EXPR)]
    ADD_ASSIGN    [reduce using rule 46 (EXPR)]
    SUB_ASSIGN    [reduce using rule 46 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 46 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 46 (EXPR)]
    AND_ASSIGN    [reduce using rule 46 (EXPR)]
    XOR_ASSIGN    [reduce using rule 46 (EXPR)]
    OR_ASSIGN     [reduce using rule 46 (EXPR)]
    '+'           [reduce using rule 46 (EXPR)]
    '-'           [reduce using rule 46 (EXPR)]
    '>'           [reduce using rule 46 (EXPR)]
    '<'           [reduce using rule 46 (EXPR)]
    '&'           [reduce using rule 46 (EXPR)]
    '|'           [reduce using rule 46 (EXPR)]
    '^'           [reduce using rule 46 (EXPR)]
    $default      reduce using rule 46 (EXPR)


State 117

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   47     | EXPR XOR_ASSIGN EXPR .
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 47 (EXPR)]
    DEC_OP        [reduce using rule 47 (EXPR)]
    LEFT_OP       [reduce using rule 47 (EXPR)]
    RIGHT_OP      [reduce using rule 47 (EXPR)]
    LE_OP         [reduce using rule 47 (EXPR)]
    GE_OP         [reduce using rule 47 (EXPR)]
    EQ_OP         [reduce using rule 47 (EXPR)]
    NE_OP         [reduce using rule 47 (EXPR)]
    AND_OP        [reduce using rule 47 (EXPR)]
    OR_OP         [reduce using rule 47 (EXPR)]
    MUL_ASSIGN    [reduce using rule 47 (EXPR)]
    DIV_ASSIGN    [reduce using rule 47 (EXPR)]
    MOD_ASSIGN    [reduce using rule 47 (EXPR)]
    ADD_ASSIGN    [reduce using rule 47 (EXPR)]
    SUB_ASSIGN    [reduce using rule 47 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 47 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 47 (EXPR)]
    AND_ASSIGN    [reduce using rule 47 (EXPR)]
    XOR_ASSIGN    [reduce using rule 47 (EXPR)]
    OR_ASSIGN     [reduce using rule 47 (EXPR)]
    '+'           [reduce using rule 47 (EXPR)]
    '-'           [reduce using rule 47 (EXPR)]
    '>'           [reduce using rule 47 (EXPR)]
    '<'           [reduce using rule 47 (EXPR)]
    '&'           [reduce using rule 47 (EXPR)]
    '|'           [reduce using rule 47 (EXPR)]
    '^'           [reduce using rule 47 (EXPR)]
    $default      reduce using rule 47 (EXPR)


State 118

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   48     | EXPR OR_ASSIGN EXPR .
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 48 (EXPR)]
    DEC_OP        [reduce using rule 48 (EXPR)]
    LEFT_OP       [reduce using rule 48 (EXPR)]
    RIGHT_OP      [reduce using rule 48 (EXPR)]
    LE_OP         [reduce using rule 48 (EXPR)]
    GE_OP         [reduce using rule 48 (EXPR)]
    EQ_OP         [reduce using rule 48 (EXPR)]
    NE_OP         [reduce using rule 48 (EXPR)]
    AND_OP        [reduce using rule 48 (EXPR)]
    OR_OP         [reduce using rule 48 (EXPR)]
    MUL_ASSIGN    [reduce using rule 48 (EXPR)]
    DIV_ASSIGN    [reduce using rule 48 (EXPR)]
    MOD_ASSIGN    [reduce using rule 48 (EXPR)]
    ADD_ASSIGN    [reduce using rule 48 (EXPR)]
    SUB_ASSIGN    [reduce using rule 48 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 48 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 48 (EXPR)]
    AND_ASSIGN    [reduce using rule 48 (EXPR)]
    XOR_ASSIGN    [reduce using rule 48 (EXPR)]
    OR_ASSIGN     [reduce using rule 48 (EXPR)]
    '+'           [reduce using rule 48 (EXPR)]
    '-'           [reduce using rule 48 (EXPR)]
    '>'           [reduce using rule 48 (EXPR)]
    '<'           [reduce using rule 48 (EXPR)]
    '&'           [reduce using rule 48 (EXPR)]
    '|'           [reduce using rule 48 (EXPR)]
    '^'           [reduce using rule 48 (EXPR)]
    $default      reduce using rule 48 (EXPR)


State 119

   28 EXPR: EXPR . '+' EXPR
   28     | EXPR '+' EXPR .
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 28 (EXPR)]
    DEC_OP        [reduce using rule 28 (EXPR)]
    LEFT_OP       [reduce using rule 28 (EXPR)]
    RIGHT_OP      [reduce using rule 28 (EXPR)]
    LE_OP         [reduce using rule 28 (EXPR)]
    GE_OP         [reduce using rule 28 (EXPR)]
    EQ_OP         [reduce using rule 28 (EXPR)]
    NE_OP         [reduce using rule 28 (EXPR)]
    AND_OP        [reduce using rule 28 (EXPR)]
    OR_OP         [reduce using rule 28 (EXPR)]
    MUL_ASSIGN    [reduce using rule 28 (EXPR)]
    DIV_ASSIGN    [reduce using rule 28 (EXPR)]
    MOD_ASSIGN    [reduce using rule 28 (EXPR)]
    ADD_ASSIGN    [reduce using rule 28 (EXPR)]
    SUB_ASSIGN    [reduce using rule 28 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 28 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 28 (EXPR)]
    AND_ASSIGN    [reduce using rule 28 (EXPR)]
    XOR_ASSIGN    [reduce using rule 28 (EXPR)]
    OR_ASSIGN     [reduce using rule 28 (EXPR)]
    '+'           [reduce using rule 28 (EXPR)]
    '-'           [reduce using rule 28 (EXPR)]
    '>'           [reduce using rule 28 (EXPR)]
    '<'           [reduce using rule 28 (EXPR)]
    '&'           [reduce using rule 28 (EXPR)]
    '|'           [reduce using rule 28 (EXPR)]
    '^'           [reduce using rule 28 (EXPR)]
    $default      reduce using rule 28 (EXPR)


State 120

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   29     | EXPR '-' EXPR .
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 29 (EXPR)]
    DEC_OP        [reduce using rule 29 (EXPR)]
    LEFT_OP       [reduce using rule 29 (EXPR)]
    RIGHT_OP      [reduce using rule 29 (EXPR)]
    LE_OP         [reduce using rule 29 (EXPR)]
    GE_OP         [reduce using rule 29 (EXPR)]
    EQ_OP         [reduce using rule 29 (EXPR)]
    NE_OP         [reduce using rule 29 (EXPR)]
    AND_OP        [reduce using rule 29 (EXPR)]
    OR_OP         [reduce using rule 29 (EXPR)]
    MUL_ASSIGN    [reduce using rule 29 (EXPR)]
    DIV_ASSIGN    [reduce using rule 29 (EXPR)]
    MOD_ASSIGN    [reduce using rule 29 (EXPR)]
    ADD_ASSIGN    [reduce using rule 29 (EXPR)]
    SUB_ASSIGN    [reduce using rule 29 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 29 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 29 (EXPR)]
    AND_ASSIGN    [reduce using rule 29 (EXPR)]
    XOR_ASSIGN    [reduce using rule 29 (EXPR)]
    OR_ASSIGN     [reduce using rule 29 (EXPR)]
    '+'           [reduce using rule 29 (EXPR)]
    '-'           [reduce using rule 29 (EXPR)]
    '>'           [reduce using rule 29 (EXPR)]
    '<'           [reduce using rule 29 (EXPR)]
    '&'           [reduce using rule 29 (EXPR)]
    '|'           [reduce using rule 29 (EXPR)]
    '^'           [reduce using rule 29 (EXPR)]
    $default      reduce using rule 29 (EXPR)


State 121

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   30     | EXPR '>' EXPR .
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 30 (EXPR)]
    DEC_OP        [reduce using rule 30 (EXPR)]
    LEFT_OP       [reduce using rule 30 (EXPR)]
    RIGHT_OP      [reduce using rule 30 (EXPR)]
    LE_OP         [reduce using rule 30 (EXPR)]
    GE_OP         [reduce using rule 30 (EXPR)]
    EQ_OP         [reduce using rule 30 (EXPR)]
    NE_OP         [reduce using rule 30 (EXPR)]
    AND_OP        [reduce using rule 30 (EXPR)]
    OR_OP         [reduce using rule 30 (EXPR)]
    MUL_ASSIGN    [reduce using rule 30 (EXPR)]
    DIV_ASSIGN    [reduce using rule 30 (EXPR)]
    MOD_ASSIGN    [reduce using rule 30 (EXPR)]
    ADD_ASSIGN    [reduce using rule 30 (EXPR)]
    SUB_ASSIGN    [reduce using rule 30 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 30 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 30 (EXPR)]
    AND_ASSIGN    [reduce using rule 30 (EXPR)]
    XOR_ASSIGN    [reduce using rule 30 (EXPR)]
    OR_ASSIGN     [reduce using rule 30 (EXPR)]
    '+'           [reduce using rule 30 (EXPR)]
    '-'           [reduce using rule 30 (EXPR)]
    '>'           [reduce using rule 30 (EXPR)]
    '<'           [reduce using rule 30 (EXPR)]
    '&'           [reduce using rule 30 (EXPR)]
    '|'           [reduce using rule 30 (EXPR)]
    '^'           [reduce using rule 30 (EXPR)]
    $default      reduce using rule 30 (EXPR)


State 122

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   31     | EXPR '<' EXPR .
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 31 (EXPR)]
    DEC_OP        [reduce using rule 31 (EXPR)]
    LEFT_OP       [reduce using rule 31 (EXPR)]
    RIGHT_OP      [reduce using rule 31 (EXPR)]
    LE_OP         [reduce using rule 31 (EXPR)]
    GE_OP         [reduce using rule 31 (EXPR)]
    EQ_OP         [reduce using rule 31 (EXPR)]
    NE_OP         [reduce using rule 31 (EXPR)]
    AND_OP        [reduce using rule 31 (EXPR)]
    OR_OP         [reduce using rule 31 (EXPR)]
    MUL_ASSIGN    [reduce using rule 31 (EXPR)]
    DIV_ASSIGN    [reduce using rule 31 (EXPR)]
    MOD_ASSIGN    [reduce using rule 31 (EXPR)]
    ADD_ASSIGN    [reduce using rule 31 (EXPR)]
    SUB_ASSIGN    [reduce using rule 31 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 31 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 31 (EXPR)]
    AND_ASSIGN    [reduce using rule 31 (EXPR)]
    XOR_ASSIGN    [reduce using rule 31 (EXPR)]
    OR_ASSIGN     [reduce using rule 31 (EXPR)]
    '+'           [reduce using rule 31 (EXPR)]
    '-'           [reduce using rule 31 (EXPR)]
    '>'           [reduce using rule 31 (EXPR)]
    '<'           [reduce using rule 31 (EXPR)]
    '&'           [reduce using rule 31 (EXPR)]
    '|'           [reduce using rule 31 (EXPR)]
    '^'           [reduce using rule 31 (EXPR)]
    $default      reduce using rule 31 (EXPR)


State 123

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   49     | EXPR '&' EXPR .
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 49 (EXPR)]
    DEC_OP        [reduce using rule 49 (EXPR)]
    LEFT_OP       [reduce using rule 49 (EXPR)]
    RIGHT_OP      [reduce using rule 49 (EXPR)]
    LE_OP         [reduce using rule 49 (EXPR)]
    GE_OP         [reduce using rule 49 (EXPR)]
    EQ_OP         [reduce using rule 49 (EXPR)]
    NE_OP         [reduce using rule 49 (EXPR)]
    AND_OP        [reduce using rule 49 (EXPR)]
    OR_OP         [reduce using rule 49 (EXPR)]
    MUL_ASSIGN    [reduce using rule 49 (EXPR)]
    DIV_ASSIGN    [reduce using rule 49 (EXPR)]
    MOD_ASSIGN    [reduce using rule 49 (EXPR)]
    ADD_ASSIGN    [reduce using rule 49 (EXPR)]
    SUB_ASSIGN    [reduce using rule 49 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 49 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 49 (EXPR)]
    AND_ASSIGN    [reduce using rule 49 (EXPR)]
    XOR_ASSIGN    [reduce using rule 49 (EXPR)]
    OR_ASSIGN     [reduce using rule 49 (EXPR)]
    '+'           [reduce using rule 49 (EXPR)]
    '-'           [reduce using rule 49 (EXPR)]
    '>'           [reduce using rule 49 (EXPR)]
    '<'           [reduce using rule 49 (EXPR)]
    '&'           [reduce using rule 49 (EXPR)]
    '|'           [reduce using rule 49 (EXPR)]
    '^'           [reduce using rule 49 (EXPR)]
    $default      reduce using rule 49 (EXPR)


State 124

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   50     | EXPR '|' EXPR .
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 50 (EXPR)]
    DEC_OP        [reduce using rule 50 (EXPR)]
    LEFT_OP       [reduce using rule 50 (EXPR)]
    RIGHT_OP      [reduce using rule 50 (EXPR)]
    LE_OP         [reduce using rule 50 (EXPR)]
    GE_OP         [reduce using rule 50 (EXPR)]
    EQ_OP         [reduce using rule 50 (EXPR)]
    NE_OP         [reduce using rule 50 (EXPR)]
    AND_OP        [reduce using rule 50 (EXPR)]
    OR_OP         [reduce using rule 50 (EXPR)]
    MUL_ASSIGN    [reduce using rule 50 (EXPR)]
    DIV_ASSIGN    [reduce using rule 50 (EXPR)]
    MOD_ASSIGN    [reduce using rule 50 (EXPR)]
    ADD_ASSIGN    [reduce using rule 50 (EXPR)]
    SUB_ASSIGN    [reduce using rule 50 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 50 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 50 (EXPR)]
    AND_ASSIGN    [reduce using rule 50 (EXPR)]
    XOR_ASSIGN    [reduce using rule 50 (EXPR)]
    OR_ASSIGN     [reduce using rule 50 (EXPR)]
    '+'           [reduce using rule 50 (EXPR)]
    '-'           [reduce using rule 50 (EXPR)]
    '>'           [reduce using rule 50 (EXPR)]
    '<'           [reduce using rule 50 (EXPR)]
    '&'           [reduce using rule 50 (EXPR)]
    '|'           [reduce using rule 50 (EXPR)]
    '^'           [reduce using rule 50 (EXPR)]
    $default      reduce using rule 50 (EXPR)


State 125

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   51     | EXPR '^' EXPR .
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    INC_OP        [reduce using rule 51 (EXPR)]
    DEC_OP        [reduce using rule 51 (EXPR)]
    LEFT_OP       [reduce using rule 51 (EXPR)]
    RIGHT_OP      [reduce using rule 51 (EXPR)]
    LE_OP         [reduce using rule 51 (EXPR)]
    GE_OP         [reduce using rule 51 (EXPR)]
    EQ_OP         [reduce using rule 51 (EXPR)]
    NE_OP         [reduce using rule 51 (EXPR)]
    AND_OP        [reduce using rule 51 (EXPR)]
    OR_OP         [reduce using rule 51 (EXPR)]
    MUL_ASSIGN    [reduce using rule 51 (EXPR)]
    DIV_ASSIGN    [reduce using rule 51 (EXPR)]
    MOD_ASSIGN    [reduce using rule 51 (EXPR)]
    ADD_ASSIGN    [reduce using rule 51 (EXPR)]
    SUB_ASSIGN    [reduce using rule 51 (EXPR)]
    LEFT_ASSIGN   [reduce using rule 51 (EXPR)]
    RIGHT_ASSIGN  [reduce using rule 51 (EXPR)]
    AND_ASSIGN    [reduce using rule 51 (EXPR)]
    XOR_ASSIGN    [reduce using rule 51 (EXPR)]
    OR_ASSIGN     [reduce using rule 51 (EXPR)]
    '+'           [reduce using rule 51 (EXPR)]
    '-'           [reduce using rule 51 (EXPR)]
    '>'           [reduce using rule 51 (EXPR)]
    '<'           [reduce using rule 51 (EXPR)]
    '&'           [reduce using rule 51 (EXPR)]
    '|'           [reduce using rule 51 (EXPR)]
    '^'           [reduce using rule 51 (EXPR)]
    $default      reduce using rule 51 (EXPR)


State 126

   59 TERM: TERM . '*' TERM
   59     | TERM '*' TERM .
   60     | TERM . '/' TERM

    '*'  shift, and go to state 74
    '/'  shift, and go to state 75

    '*'       [reduce using rule 59 (TERM)]
    '/'       [reduce using rule 59 (TERM)]
    $default  reduce using rule 59 (TERM)


State 127

   59 TERM: TERM . '*' TERM
   60     | TERM . '/' TERM
   60     | TERM '/' TERM .

    '*'  shift, and go to state 74
    '/'  shift, and go to state 75

    '*'       [reduce using rule 60 (TERM)]
    '/'       [reduce using rule 60 (TERM)]
    $default  reduce using rule 60 (TERM)


State 128

   25 DECLARATION: DATA_TYPES IDENTIFIER '=' . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 142
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 129

   67 FACTOR: IDENTIFIER '(' ARGUMENTS ')' .

    $default  reduce using rule 67 (FACTOR)


State 130

   68 ARGUMENTS: ARGUMENTS ',' . EXPR

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 143
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 131

   70 IF_ELSE_SWITCH: IF '(' . EXPR ')' BLOCK
   71               | IF '(' . EXPR ')' BLOCK ELSE BLOCK

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 144
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 132

   73 IF_ELSE_SWITCH: SWITCH '(' . EXPR ')' SWITCH_BLOCK

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 145
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 133

   80 LOOP: WHILE '(' . EXPR ')' BLOCK

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 146
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 134

   81 LOOP: DO BLOCK . WHILE '(' EXPR ')' ';'

    WHILE  shift, and go to state 147


State 135

   79 LOOP: FOR '(' . DECLARATION ';' EXPR ';' DECLARATION ')' BLOCK

    IDENTIFIER  shift, and go to state 19
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    VOID        shift, and go to state 9
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    DECLARATION  go to state 148
    EXPR         go to state 29
    TERM         go to state 30
    UNARY        go to state 31
    FACTOR       go to state 32
    DATA_TYPES   go to state 33


State 136

   19 STATEMENT: RETURN EXPR .
   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    $default  reduce using rule 19 (STATEMENT)


State 137

   11 BLOCK: '{' BODY '}' .

    $default  reduce using rule 11 (BLOCK)


State 138

   13 BODY: LINE BODY .

    $default  reduce using rule 13 (BODY)


State 139

   15 LINE: STATEMENT ';' .

    $default  reduce using rule 15 (LINE)


State 140

   16 LINE: DECLARATION ';' .

    $default  reduce using rule 16 (LINE)


State 141

   72 IF_ELSE_SWITCH: EXPR '?' . BLOCK ':' BLOCK

    '{'  shift, and go to state 41

    BLOCK  go to state 149


State 142

   25 DECLARATION: DATA_TYPES IDENTIFIER '=' EXPR .
   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    $default  reduce using rule 25 (DECLARATION)


State 143

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP
   68 ARGUMENTS: ARGUMENTS ',' EXPR .

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73

    $default  reduce using rule 68 (ARGUMENTS)


State 144

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP
   70 IF_ELSE_SWITCH: IF '(' EXPR . ')' BLOCK
   71               | IF '(' EXPR . ')' BLOCK ELSE BLOCK

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    ')'           shift, and go to state 150
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73


State 145

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP
   73 IF_ELSE_SWITCH: SWITCH '(' EXPR . ')' SWITCH_BLOCK

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    ')'           shift, and go to state 151
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73


State 146

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP
   80 LOOP: WHILE '(' EXPR . ')' BLOCK

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    ')'           shift, and go to state 152
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73


State 147

   81 LOOP: DO BLOCK WHILE . '(' EXPR ')' ';'

    '('  shift, and go to state 153


State 148

   79 LOOP: FOR '(' DECLARATION . ';' EXPR ';' DECLARATION ')' BLOCK

    ';'  shift, and go to state 154


State 149

   72 IF_ELSE_SWITCH: EXPR '?' BLOCK . ':' BLOCK

    ':'  shift, and go to state 155


State 150

   70 IF_ELSE_SWITCH: IF '(' EXPR ')' . BLOCK
   71               | IF '(' EXPR ')' . BLOCK ELSE BLOCK

    '{'  shift, and go to state 41

    BLOCK  go to state 156


State 151

   73 IF_ELSE_SWITCH: SWITCH '(' EXPR ')' . SWITCH_BLOCK

    '{'  shift, and go to state 157

    SWITCH_BLOCK  go to state 158


State 152

   80 LOOP: WHILE '(' EXPR ')' . BLOCK

    '{'  shift, and go to state 41

    BLOCK  go to state 159


State 153

   81 LOOP: DO BLOCK WHILE '(' . EXPR ')' ';'

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 160
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 154

   79 LOOP: FOR '(' DECLARATION ';' . EXPR ';' DECLARATION ')' BLOCK

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 161
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 155

   72 IF_ELSE_SWITCH: EXPR '?' BLOCK ':' . BLOCK

    '{'  shift, and go to state 41

    BLOCK  go to state 162


State 156

   70 IF_ELSE_SWITCH: IF '(' EXPR ')' BLOCK .
   71               | IF '(' EXPR ')' BLOCK . ELSE BLOCK

    ELSE  shift, and go to state 163

    $default  reduce using rule 70 (IF_ELSE_SWITCH)


State 157

   76 SWITCH_BLOCK: '{' . SWITCH_BODY '}'

    CASE     shift, and go to state 164
    DEFAULT  shift, and go to state 165

    CASES        go to state 166
    SWITCH_BODY  go to state 167


State 158

   73 IF_ELSE_SWITCH: SWITCH '(' EXPR ')' SWITCH_BLOCK .

    $default  reduce using rule 73 (IF_ELSE_SWITCH)


State 159

   80 LOOP: WHILE '(' EXPR ')' BLOCK .

    $default  reduce using rule 80 (LOOP)


State 160

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP
   81 LOOP: DO BLOCK WHILE '(' EXPR . ')' ';'

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    ')'           shift, and go to state 168
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73


State 161

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP
   79 LOOP: FOR '(' DECLARATION ';' EXPR . ';' DECLARATION ')' BLOCK

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    ';'           shift, and go to state 169
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73


State 162

   72 IF_ELSE_SWITCH: EXPR '?' BLOCK ':' BLOCK .

    $default  reduce using rule 72 (IF_ELSE_SWITCH)


State 163

   71 IF_ELSE_SWITCH: IF '(' EXPR ')' BLOCK ELSE . BLOCK

    '{'  shift, and go to state 41

    BLOCK  go to state 170


State 164

   74 CASES: CASE . EXPR ':' BODY

    IDENTIFIER  shift, and go to state 36
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    EXPR    go to state 171
    TERM    go to state 30
    UNARY   go to state 31
    FACTOR  go to state 32


State 165

   75 CASES: DEFAULT . ':' BODY

    ':'  shift, and go to state 172


State 166

   77 SWITCH_BODY: CASES . SWITCH_BODY
   78            | CASES .

    CASE     shift, and go to state 164
    DEFAULT  shift, and go to state 165

    $default  reduce using rule 78 (SWITCH_BODY)

    CASES        go to state 166
    SWITCH_BODY  go to state 173


State 167

   76 SWITCH_BLOCK: '{' SWITCH_BODY . '}'

    '}'  shift, and go to state 174


State 168

   81 LOOP: DO BLOCK WHILE '(' EXPR ')' . ';'

    ';'  shift, and go to state 175


State 169

   79 LOOP: FOR '(' DECLARATION ';' EXPR ';' . DECLARATION ')' BLOCK

    IDENTIFIER  shift, and go to state 19
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    VOID        shift, and go to state 9
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    DECLARATION  go to state 176
    EXPR         go to state 29
    TERM         go to state 30
    UNARY        go to state 31
    FACTOR       go to state 32
    DATA_TYPES   go to state 33


State 170

   71 IF_ELSE_SWITCH: IF '(' EXPR ')' BLOCK ELSE BLOCK .

    $default  reduce using rule 71 (IF_ELSE_SWITCH)


State 171

   28 EXPR: EXPR . '+' EXPR
   29     | EXPR . '-' EXPR
   30     | EXPR . '>' EXPR
   31     | EXPR . '<' EXPR
   32     | EXPR . NE_OP EXPR
   33     | EXPR . EQ_OP EXPR
   34     | EXPR . GE_OP EXPR
   35     | EXPR . LE_OP EXPR
   36     | EXPR . OR_OP EXPR
   37     | EXPR . AND_OP EXPR
   39     | EXPR . RIGHT_ASSIGN EXPR
   40     | EXPR . LEFT_ASSIGN EXPR
   41     | EXPR . ADD_ASSIGN EXPR
   42     | EXPR . SUB_ASSIGN EXPR
   43     | EXPR . MUL_ASSIGN EXPR
   44     | EXPR . DIV_ASSIGN EXPR
   45     | EXPR . MOD_ASSIGN EXPR
   46     | EXPR . AND_ASSIGN EXPR
   47     | EXPR . XOR_ASSIGN EXPR
   48     | EXPR . OR_ASSIGN EXPR
   49     | EXPR . '&' EXPR
   50     | EXPR . '|' EXPR
   51     | EXPR . '^' EXPR
   52     | EXPR . RIGHT_OP EXPR
   53     | EXPR . LEFT_OP EXPR
   54     | EXPR . INC_OP
   56     | EXPR . DEC_OP
   74 CASES: CASE EXPR . ':' BODY

    INC_OP        shift, and go to state 47
    DEC_OP        shift, and go to state 48
    LEFT_OP       shift, and go to state 49
    RIGHT_OP      shift, and go to state 50
    LE_OP         shift, and go to state 51
    GE_OP         shift, and go to state 52
    EQ_OP         shift, and go to state 53
    NE_OP         shift, and go to state 54
    AND_OP        shift, and go to state 55
    OR_OP         shift, and go to state 56
    MUL_ASSIGN    shift, and go to state 57
    DIV_ASSIGN    shift, and go to state 58
    MOD_ASSIGN    shift, and go to state 59
    ADD_ASSIGN    shift, and go to state 60
    SUB_ASSIGN    shift, and go to state 61
    LEFT_ASSIGN   shift, and go to state 62
    RIGHT_ASSIGN  shift, and go to state 63
    AND_ASSIGN    shift, and go to state 64
    XOR_ASSIGN    shift, and go to state 65
    OR_ASSIGN     shift, and go to state 66
    '+'           shift, and go to state 67
    '-'           shift, and go to state 68
    '>'           shift, and go to state 69
    '<'           shift, and go to state 70
    '&'           shift, and go to state 71
    '|'           shift, and go to state 72
    '^'           shift, and go to state 73
    ':'           shift, and go to state 177


State 172

   75 CASES: DEFAULT ':' . BODY

    IDENTIFIER  shift, and go to state 19
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    VOID        shift, and go to state 9
    IF          shift, and go to state 82
    SWITCH      shift, and go to state 83
    WHILE       shift, and go to state 84
    DO          shift, and go to state 85
    FOR         shift, and go to state 86
    CONTINUE    shift, and go to state 87
    BREAK       shift, and go to state 88
    RETURN      shift, and go to state 89
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    BODY            go to state 178
    LINE            go to state 92
    STATEMENT       go to state 93
    DECLARATION     go to state 94
    EXPR            go to state 95
    TERM            go to state 30
    UNARY           go to state 31
    FACTOR          go to state 32
    IF_ELSE_SWITCH  go to state 96
    LOOP            go to state 97
    DATA_TYPES      go to state 33


State 173

   77 SWITCH_BODY: CASES SWITCH_BODY .

    $default  reduce using rule 77 (SWITCH_BODY)


State 174

   76 SWITCH_BLOCK: '{' SWITCH_BODY '}' .

    $default  reduce using rule 76 (SWITCH_BLOCK)


State 175

   81 LOOP: DO BLOCK WHILE '(' EXPR ')' ';' .

    $default  reduce using rule 81 (LOOP)


State 176

   79 LOOP: FOR '(' DECLARATION ';' EXPR ';' DECLARATION . ')' BLOCK

    ')'  shift, and go to state 179


State 177

   74 CASES: CASE EXPR ':' . BODY

    IDENTIFIER  shift, and go to state 19
    CONSTANT    shift, and go to state 20
    INC_OP      shift, and go to state 21
    DEC_OP      shift, and go to state 22
    CHAR        shift, and go to state 1
    SHORT       shift, and go to state 2
    INT         shift, and go to state 3
    LONG        shift, and go to state 4
    SIGNED      shift, and go to state 5
    UNSIGNED    shift, and go to state 6
    FLOAT       shift, and go to state 7
    DOUBLE      shift, and go to state 8
    VOID        shift, and go to state 9
    IF          shift, and go to state 82
    SWITCH      shift, and go to state 83
    WHILE       shift, and go to state 84
    DO          shift, and go to state 85
    FOR         shift, and go to state 86
    CONTINUE    shift, and go to state 87
    BREAK       shift, and go to state 88
    RETURN      shift, and go to state 89
    '('         shift, and go to state 23
    '-'         shift, and go to state 25
    '!'         shift, and go to state 26

    BODY            go to state 180
    LINE            go to state 92
    STATEMENT       go to state 93
    DECLARATION     go to state 94
    EXPR            go to state 95
    TERM            go to state 30
    UNARY           go to state 31
    FACTOR          go to state 32
    IF_ELSE_SWITCH  go to state 96
    LOOP            go to state 97
    DATA_TYPES      go to state 33


State 178

   75 CASES: DEFAULT ':' BODY .

    $default  reduce using rule 75 (CASES)


State 179

   79 LOOP: FOR '(' DECLARATION ';' EXPR ';' DECLARATION ')' . BLOCK

    '{'  shift, and go to state 41

    BLOCK  go to state 181


State 180

   74 CASES: CASE EXPR ':' BODY .

    $default  reduce using rule 74 (CASES)


State 181

   79 LOOP: FOR '(' DECLARATION ';' EXPR ';' DECLARATION ')' BLOCK .

    $default  reduce using rule 79 (LOOP)
